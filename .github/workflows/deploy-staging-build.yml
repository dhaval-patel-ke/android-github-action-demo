name: Deploy Staging Build

on:
  push:
    branches: [ 'release/**' ]

permissions:
  actions: write
  contents: write

env:
  APK_NAME: "TopThis-Staging.apk"
  IPA_NAME: "TopThis-Staging.ipa"

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-environment

      - name: Build Staging APK
        run: flutter build apk -t lib/main_staging.dart --release --flavor staging

      - name: Rename APK File
        run: mv build/app/outputs/flutter-apk/*.apk ${{ env.APK_NAME }}

      - name: Upload Android Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ${{ env.APK_NAME }}
          if-no-files-found: error
          compression-level: 0 # no compression

  build-ios:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Apple Signing
        uses: ./.github/actions/apple-signing
        with:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          PROVISION_PROFILE_BASE64: ${{ secrets.PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Setup Environment
        uses: ./.github/actions/setup-environment

      - name: Build Staging IPA
        run: flutter build ipa -t lib/main_staging.dart --flavor "TopActs[STG]" --export-options-plist=ios/ExportOptions-Staging.plist

      - name: Rename IPA File
        run: mv build/ios/ipa/*.ipa ${{ env.IPA_NAME }}

      - name: Upload iOS Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IPA_NAME }}
          path: ${{ env.IPA_NAME }}
          compression-level: 0 # no compression

  # Required because of https://github.com/wzieba/Firebase-Distribution-Github-Action/issues/24
  firebase-distribution:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ build-android, build-ios ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APK_NAME }}

      - name: Upload APK artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ vars.FIREBASE_STAGING_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS }}
          groups: kernelequity
          file: ${{ env.APK_NAME }}

      - name: Download IPA artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IPA_NAME }}

      - name: Upload IPA artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ vars.FIREBASE_STAGING_IOS_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS }}
          groups: kernelequity
          file: ${{ env.IPA_NAME }}

  create-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [firebase-distribution]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set tag version
        run: echo "VERSION_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v7
        id: create-tag
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{env.VERSION_NAME}}',
              sha: context.sha
            })